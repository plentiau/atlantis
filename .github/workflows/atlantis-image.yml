name: atlantis-image

on:
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - v*.*.*
  pull_request:
    branches:
      - 'main'
      - 'release/*'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GITHUB_ACTIONS_ECR_ROLE_ARN: arn:aws:iam::028287609508:role/pipeline-atlantis-role
  AWS_REGION: ap-southeast-2
  ECR_REPO_URL: 028287609508.dkr.ecr.ap-southeast-2.amazonaws.com
  DOCKER_IMAGE_NAME: buildtools/atlantis
  AWS_INFRA_ACCOUNT_ID: "028287609508"

jobs:
  build:
    name: Build Image
    permissions:
      contents: read
      id-token: write
      packages: write
      attestations: write
    strategy:
      matrix:
        image_type: [alpine, debian]
    runs-on: ubuntu-24.04
    env:
      # Push if not a pull request and references the main or release branches
      PUSH: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/tags/')) }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3
      with:
        image: tonistiigi/binfmt:latest
        platforms: arm64,arm

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
      # https://github.com/docker/build-push-action/issues/761#issuecomment-1575006515
      with:
        driver-opts: |
          image=moby/buildkit:v0.14.0

    # release version is the name of the tag i.e. v0.10.0
    # release version also has the image type appended i.e. v0.10.0-alpine
    # release tag is either pre-release or latest i.e. latest
    # release tag also has the image type appended i.e. latest-alpine
    # if it's v0.10.0 and alpine, it will do v0.10.0, v0.10.0-alpine, latest, latest-alpine
    # if it's v0.10.0 and debian, it will do v0.10.0-debian, latest-debian
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
      env:
        SUFFIX: ${{ format('-{0}', matrix.image_type) }}
      with:
        images: |
          ${{ env.ECR_REPO_URL }}/${{ env.DOCKER_IMAGE_NAME }}
        labels: |
          org.opencontainers.image.authors="@plentiau Github Org"
          org.opencontainers.image.licenses=Apache-2.0
        tags: |
          # semver
          type=semver,pattern={{version}},prefix=v,suffix=${{ env.SUFFIX }}
          type=semver,pattern={{version}},prefix=v,enable=${{ matrix.image_type == 'alpine' }}
          type=semver,pattern={{major}}.{{minor}},prefix=v,suffix=${{ env.SUFFIX }}
          # latest
          type=raw,event=tag,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'pre') && matrix.image_type == 'alpine' }},suffix=
          type=raw,event=tag,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'pre') }},suffix=${{ env.SUFFIX }}
        flavor: |
          # This is disabled here so we can use the raw form above
          latest=false
          # Suffix is not used here since there's no way to disable it above

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.GITHUB_ACTIONS_ECR_ROLE_ARN }}
        role-session-name: github_ecr_role_session
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ env.AWS_INFRA_ACCOUNT_ID }}

    # Publish release to container registry
    - name: Populate release version
      if: contains(fromJson('["push", "pull_request"]'), github.event_name)
      run: echo "RELEASE_VERSION=${{ startsWith(github.ref, 'refs/tags/') && '${GITHUB_REF#refs/*/}' || 'dev' }}" >> $GITHUB_ENV

    - name: "Build ${{ env.PUSH == 'true' && 'and push' || '' }} ${{ env.ECR_REPO_URL }}/${{ env.DOCKER_IMAGE_NAME }} image"
      id: build
      if: contains(fromJson('["push", "pull_request"]'), github.event_name)
      uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6
      with:
        context: .
        build-args: |
          ATLANTIS_BASE_TAG_TYPE=${{ matrix.image_type }}
          ATLANTIS_VERSION=${{ env.RELEASE_VERSION }}
          ATLANTIS_COMMIT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          ATLANTIS_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
        platforms: linux/arm64/v8,linux/amd64,linux/arm/v7
        push: ${{ env.PUSH }}
        tags: ${{ steps.meta.outputs.tags }}
        target: ${{ matrix.image_type }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ steps.meta.outputs.tags }}
